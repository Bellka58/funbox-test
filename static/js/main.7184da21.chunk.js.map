{"version":3,"sources":["images/Photo.png","images/Pattern.png","components/item-card/card-footer/index.js","components/item-card/card-footer/card-footer.js","utils/words.js","components/item-card/card-title/card-title.js","components/item-card/card-title/index.js","components/item-card/item-card.js","components/item-card/index.js","components/app/cards-mock.js","components/app/app.js","components/app/index.js","index.js"],"names":["module","exports","CardFooter","type","cardType","default","text","hovered","setIsHovered","onClick","description","className","onMouseEnter","onMouseLeave","disabled","wordsByNumber","number","forms","n","n1","CardTitle","name","taste","portionsCount","presentCount","additionalInfo","isSelectedHovered","selected","ItemCard","card","isSelected","footerText","outOfStockText","weight","initType","availability","useState","setType","isHovered","clickWithoutHover","setClickWithoutHover","isHoveredWithoutClick","handleCardClick","src","require","alt","cards","App","style","backgroundImage","map","idx","key","ReactDOM","render","document","getElementById"],"mappings":"gMAAAA,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,4FCE5BC,G,MCCI,SAAC,GAMb,IAAD,IALFC,YAKE,MALKC,EAASC,QAKd,EAJFC,EAIE,EAJFA,KAIE,IAHFC,eAGE,SAFFC,EAEE,EAFFA,aACAC,EACE,EADFA,QAGMC,EAAcP,IAASC,EAASC,QAClC,iKAC+B,IAC3B,0BACEM,UAAU,mBACVC,aAAc,kBAAMJ,GAAa,IACjCK,aAAc,kBAAML,GAAa,IACjCC,QAASA,GAJX,4BAKA,0BAAME,UAAU,QAAhB,MAGJ,uBAAGA,UAAS,UAAKR,IAASC,EAASU,UAAY,aAC1CR,GAIT,OACI,yBAAKK,UAAS,sBAAiBJ,GAAW,YACrCG,KC7BN,SAASK,EAAcC,EAAQC,GAClC,IAAIC,EAAIF,EAAS,IACbG,EAAKD,EAAI,GACb,OAAIA,EAAI,IAAMA,EAAI,GAAaD,EAAM,GACjCE,EAAK,GAAKA,EAAK,EAAYF,EAAM,GAC1B,IAAPE,EAAmBF,EAAM,GACtBA,EAAM,GCHjB,ICDeG,EDCG,SAAC,GAQZ,IAAD,IAPFV,mBAOE,MAPY,GAOZ,MANFW,YAME,MANK,GAML,MALFC,aAKE,MALM,GAKN,MAJFC,qBAIE,MAJc,EAId,MAHFC,oBAGE,MAHa,EAGb,MAFFC,sBAEE,MAFe,GAEf,MADFC,yBACE,SAEJ,OACE,yBAAKf,UAAU,cACX,uBAAGA,UAAS,sBAAiBe,EAAoB,SAAW,KAAOhB,GACjE,uBAAGC,UAAU,QAAQU,GACrB,uBAAGV,UAAU,SAASW,GACxB,yBAAKX,UAAU,cACX,uBAAGA,UAAU,YACT,2BAAIY,GADR,IAC4BR,EAAcQ,EAAe,CAAC,uCAAU,uCAAU,4CAE3EC,GACC,uBAAGb,UAAU,WACT,2BAAIa,EAAe,EAAIA,EAAe,IAD1C,IACmDT,EAAcS,EAAc,CAAC,2BAAQ,2BAAQ,mCADhG,sDAIF,2BAAIC,MEtBLrB,EAAW,CACtBC,QAAS,UACTsB,SAAU,WACVb,SAAU,YCNGc,EDSE,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,KAA8B,IAAxBC,kBAAwB,WAY3CD,GAAQ,GAVVE,EAF6C,EAE7CA,WACAC,EAH6C,EAG7CA,eACAtB,EAJ6C,EAI7CA,YACAW,EAL6C,EAK7CA,KACAC,EAN6C,EAM7CA,MACAC,EAP6C,EAO7CA,cACAC,EAR6C,EAQ7CA,aACAC,EAT6C,EAS7CA,eACAQ,EAV6C,EAU7CA,OAIIC,EAdyC,EAW7CC,aAICL,EACC1B,EAASuB,SACPvB,EAASC,QACXD,EAASU,SAlBkC,EAoBvBsB,mBAASF,GApBc,mBAoBxC/B,EApBwC,KAoBlCkC,EApBkC,OAqBbD,oBAAS,GArBI,mBAqBxCE,EArBwC,KAqB7B9B,EArB6B,OAuBG4B,oBAAS,GAvBZ,mBAuBxCG,EAvBwC,KAuBrBC,EAvBqB,KAwBzCC,EAAwBH,IAAcC,EACtCb,EAAoBvB,IAASC,EAASuB,UAAYc,EAElDC,EAAkB,WACtBF,GAAqB,GACjBrC,IAASC,EAASU,UACtBuB,EAAQlC,IAASC,EAASC,QAAUD,EAASuB,SAAWvB,EAASC,UAInE,OACE,yBAAKM,UAAU,aACb,yBACEA,UAAS,0BAAqBR,EAArB,YAA6BsC,EAAwB,UAAY,IAC1E7B,aAAc,kBAAMJ,GAAa,IACjCK,aAAc,WACZL,GAAa,GACbgC,GAAqB,IAEvB/B,QAASiC,GAET,yBAAK/B,UAAU,aACf,yBACEA,UAAU,MACVgC,IAAKC,EAAQ,IACbC,IAAI,QAEN,yBAAKlC,UAAU,UACb,uBAAGA,UAAU,iBAAiBsB,GAC9B,uBAAGtB,UAAU,gBAAb,iBAGF,kBAAC,EAAD,CACED,YAAagB,EAAoB,0FAAsBhB,EACvDW,KAAMA,EACNC,MAAOA,EACPC,cAAeA,EACfC,aAAcA,EACdC,eAAgBA,EAChBC,kBAAmBA,KAGvB,kBAAC,EAAD,CACEvB,KAAMA,EACNG,KAAMH,IAASC,EAASU,SAAWkB,EAAiBD,EACpDxB,QAASkC,EACTjC,aAAcA,EACdC,QAASiC,MElFJI,EAAQ,CACnB,CACEpC,YAAa,+IACbW,KAAM,6CACNC,MAAO,+CACPC,cAAe,GACfC,aAAc,EACdC,eAAgB,GAChBQ,OAAQ,MACRF,WAAY,4LACZC,eAAgB,+JAChBG,cAAc,GAEhB,CACEzB,YAAa,+IACbW,KAAM,6CACNC,MAAO,wCACPC,cAAe,GACfC,aAAc,EACdC,eAAgB,GAChBQ,OAAQ,IACRF,WAAY,oPACZC,eAAgB,wJAChBG,cAAc,GAEhB,CACEzB,YAAa,+IACbW,KAAM,6CACNC,MAAO,wCACPC,cAAe,IACfC,aAAc,EACdC,eAAgB,8FAChBQ,OAAQ,IACRF,WAAY,8LACZC,eAAgB,wJAChBG,cAAc,ICbHY,ICpBAA,EDGf,WACE,OACE,yBACEpC,UAAU,MACVqC,MAAO,CAAEC,gBAAgB,OAAD,OAASL,EAAQ,IAAjB,OAExB,yBAAKjC,UAAU,eACf,yBAAKA,UAAU,aAAf,sIAGA,yBAAKA,UAAU,mBACZmC,EAAMI,KAAI,SAACrB,EAAMsB,GAAP,OAAe,kBAAC,EAAD,CAAUC,IAAKD,EAAKtB,KAAMA,EAAMC,WAAoB,IAARqB,UEX9EE,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.7184da21.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Photo.edd4c002.png\";","module.exports = __webpack_public_path__ + \"static/media/Pattern.f17bf942.png\";","import CardFooter from \"./card-footer\";\n\nexport default CardFooter;","import React from 'react';\nimport { cardType } from '../item-card';\n\nconst CardFooter = ({\n    type = cardType.default,\n    text,\n    hovered = false,\n    setIsHovered,\n    onClick,\n}) => {\n\n    const description = type === cardType.default ? (\n        <p>\n            Чего сидишь? Порадуй котэ,{\" \"}\n            <span\n              className=\"text-button blue\"\n              onMouseEnter={() => setIsHovered(true)}\n              onMouseLeave={() => setIsHovered(false)}\n              onClick={onClick}>купи</span>\n            <span className=\"blue\">.</span>\n        </p>\n    ) : (\n        <p className={`${type === cardType.disabled && 'disabled'}`}>\n            {text}\n        </p>\n    );\n\n    return (\n        <div className={`card-footer ${hovered && 'hovered'}`}>\n            {description}\n        </div>\n    );\n};\n\nexport default CardFooter;","export function wordsByNumber(number, forms) {\n    let n = number % 100;\n    let n1 = n % 10;\n    if (n > 10 && n < 20) { return forms[2]; }\n    if (n1 > 1 && n1 < 5) { return forms[1]; }\n    if (n1 === 1) { return forms[0]; }\n    return forms[2];\n}","import React from 'react';\nimport { wordsByNumber } from '../../../utils/words';\n\nconst CardTitle = ({\n    description = '',\n    name = '',\n    taste = '',\n    portionsCount = 1,\n    presentCount = 1,\n    additionalInfo = '',\n    isSelectedHovered= false,\n}) => {\n\n  return (\n    <div className=\"card-title\">\n        <p className={`description ${isSelectedHovered ? 'active' : ''}`}>{description}</p>\n          <p className=\"name\">{name}</p>\n          <p className=\"taste\">{taste}</p>\n        <div className=\"additional\">\n            <p className=\"portions\">\n                <b>{portionsCount}</b> {wordsByNumber(portionsCount, ['порция', 'порции', 'порций'])}\n            </p>\n            {!!presentCount && (\n                <p className=\"present\">\n                    <b>{presentCount > 1 ? presentCount : ''}</b> {wordsByNumber(presentCount, ['мышь', 'мыши', 'мышей'])} в подарок\n                </p>\n            )}\n              <p>{additionalInfo}</p>\n        </div>\n    </div>\n  );\n};\n\nexport default CardTitle;","import CardTitle from \"./card-title\";\n\nexport default CardTitle;","import React, { useState } from 'react';\nimport './item-card.scss';\nimport CardFooter from './card-footer';\nimport CardTitle from './card-title';\n\nexport const cardType = {\n  default: 'default',\n  selected: 'selected',\n  disabled: 'disabled',\n};\n\nconst ItemCard = ({card, isSelected = false}) => {\n  const {\n    footerText,\n    outOfStockText,\n    description,\n    name,\n    taste,\n    portionsCount,\n    presentCount,\n    additionalInfo,\n    weight,\n    availability,\n  } = card || {};\n\n  const initType = availability ? \n    (isSelected ?\n      cardType.selected\n      : cardType.default)\n    : cardType.disabled;\n\n  const [type, setType] = useState(initType);\n  const [isHovered, setIsHovered] = useState(false);\n\n  const [clickWithoutHover, setClickWithoutHover] = useState(false);\n  const isHoveredWithoutClick = isHovered && !clickWithoutHover;\n  const isSelectedHovered = type === cardType.selected && isHoveredWithoutClick;\n\n  const handleCardClick = () => {\n    setClickWithoutHover(true);\n    if (type === cardType.disabled) return;\n    setType(type === cardType.default ? cardType.selected : cardType.default);\n  };\n\n\n  return (\n    <div className=\"item-card\">\n      <div\n        className={`item-card__main ${type} ${isHoveredWithoutClick ? 'hovered' : ''}`}\n        onMouseEnter={() => setIsHovered(true)}\n        onMouseLeave={() => {\n          setIsHovered(false);\n          setClickWithoutHover(false);\n        }}\n        onClick={handleCardClick}\n      >\n        <div className=\"triangle\" />\n        <img\n          className=\"cat\"\n          src={require(\"../../images/Photo.png\")}\n          alt=\"cat\"\n        />\n        <div className=\"weigth\">\n          <p className=\"weight-number\">{weight}</p>\n          <p className=\"weight-value\">кг</p>\n        </div>\n\n        <CardTitle \n          description={isSelectedHovered ? 'Котэ не одобряет?' : description}\n          name={name}\n          taste={taste}\n          portionsCount={portionsCount}\n          presentCount={presentCount}\n          additionalInfo={additionalInfo}\n          isSelectedHovered={isSelectedHovered}\n        />\n      </div>\n      <CardFooter\n        type={type}\n        text={type === cardType.disabled ? outOfStockText : footerText}\n        hovered={isHoveredWithoutClick}\n        setIsHovered={setIsHovered}\n        onClick={handleCardClick}\n      />\n    </div>\n  );\n};\n\nexport default ItemCard;","import ItemCard from \"./item-card\";\n\nexport default ItemCard;","export const cards = [\n  {\n    description: \"Сказочное заморское яство\",\n    name: \"Нямушка\",\n    taste: \"с фуа-гра\",\n    portionsCount: 10,\n    presentCount: 1,\n    additionalInfo: '',\n    weight: '0,5',\n    footerText: 'Печень утки разварная с артишоками.',\n    outOfStockText: 'Печалька, с фуа-гра закончился.',\n    availability: true,\n  },\n  {\n    description: \"Сказочное заморское яство\",\n    name: \"Нямушка\",\n    taste: \"с рыбой\",\n    portionsCount: 40,\n    presentCount: 2,\n    additionalInfo: '',\n    weight: '2',\n    footerText: 'Головы щучьи с чесноком да свежайшая сёмгушка.',\n    outOfStockText: 'Печалька, с рыбой закончился.',\n    availability: true,\n  },\n  {\n    description: \"Сказочное заморское яство\",\n    name: \"Нямушка\",\n    taste: \"с курой\",\n    portionsCount: 100,\n    presentCount: 5,\n    additionalInfo: 'заказчик доволен',\n    weight: '5',\n    footerText: 'Филе из цыплят с трюфелями в бульоне.',\n    outOfStockText: 'Печалька, с курой закончился.',\n    availability: false,\n  }\n];","import React from 'react';\nimport './app.scss';\nimport ItemCard from '../item-card';\nimport { cards } from './cards-mock';\n\nfunction App() {\n  return (\n    <div\n      className=\"app\"\n      style={{ backgroundImage: `url(${require(\"../../images/Pattern.png\")})` }}\n    >\n      <div className=\"app-shadow\"/>\n      <div className=\"app-title\">\n        Ты сегодня покормил кота?\n      </div>\n      <div className=\"cards-container\">\n        {cards.map((card, idx) => <ItemCard key={idx} card={card} isSelected={idx === 1} />)}\n      </div>\n    </div>\n  );\n}\n\nexport default App;","import App from \"./app\";\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/app';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}